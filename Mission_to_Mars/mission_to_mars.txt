# Import Splinter and BeautifulSoup
from splinter import Browser
from bs4 import BeautifulSoup
from webdriver_manager.chrome import ChromeDriverManager

# Set the executable path and initialize the chrome browser in splinter
executable_path = {'executable_path': ChromeDriverManager().install()}
browser = Browser('chrome', **executable_path)

# Visit the mars nasa news site
url = 'https://mars.nasa.gov/news/'
browser.visit(url)

# Optional delay for loading the page
browser.is_element_present_by_css("ul.item_list li.slide", wait_time=1)

# Convert the browser html to a soup object and then quit the browser
html = browser.html
news_soup = BeautifulSoup(html, 'html.parser')

slide_elem = news_soup.select_one('ul.item_list li.slide')

slide_elem.find("div", class_='content_title')

# Use the parent element to find the first a tag and save it as `news_title`
news_title = slide_elem.find("div", class_='content_title').get_text()
news_title

# Use the parent element to find the paragraph text
news_p = slide_elem.find('div', class_="article_teaser_body").get_text()
news_p

# Visit URL
url = 'https://spaceimages-mars.com/'
browser.visit(url)

# Find and click the full image button
full_image_elem = browser.find_by_text(' FULL IMAGE')
full_image_elem.click()

browser.is_element_present_by_text('more info', wait_time=1)

html = browser.html
img_soup = BeautifulSoup(html, 'html.parser')

# find the relative image url
rel_img_url = img_soup.find_all('img')[1].get("src")
rel_img_url

# concatinate url's to create absolute featured image url
featured_image_url = url + rel_img_url
featured_image_url

import pandas as pd
df = pd.read_html('https://galaxyfacts-mars.com/')[1]
df.columns=['description', 'value']
df.set_index('description', inplace=True)
df

df.to_html()

url = 'https://marshemispheres.com/'
browser.visit(url)

import time
hemisphere_image_urls = []

# First, get a list of all of the hemispheres
links = browser.find_by_css("h3")

# Next, loop through those links, click the link, find the sample anchor, return the href
for i in range(len(links)-1):
    hemisphere = {}
    
    # We have to find the elements on each loop to avoid a stale element exception
    browser.find_by_css('h3')[i].click()
    time.sleep(1)
    
    # Next, we find the Sample image anchor tag and extract the href
    sample_elem = browser.links.find_by_text('Sample').first
    hemisphere['img_url'] = sample_elem['href']
    
    # Get Hemisphere title
    hemisphere['title'] = browser.find_by_css("h2.title").text
    
    # Append hemisphere object to list
    hemisphere_image_urls.append(hemisphere)
    
    # Finally, we navigate backwards
    time.sleep(1)
    browser.back()
    time.sleep(1)

hemisphere_image_urls

browser.quit()


